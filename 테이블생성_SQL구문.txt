--시퀀스
--CREATE SEQUENCE SEQ_MEMBER;
--CREATE SEQUENCE SEQ_PRODUCT;
--CREATE SEQUENCE SEQ_EVENT;
--CREATE SEQUENCE SEQ_PAYMENT;
--CREATE SEQUENCE SEQ_EXCHANGE_LIST;
--CREATE SEQUENCE SEQ_REFUND_LIST;
--CREATE SEQUENCE SEQ_NOTICE;
--CREATE SEQUENCE SEQ_QNA;
--CREATE SEQUENCE SEQ_CATEGORY;
--CREATE SEQUENCE SEQ_VIEW;

--CREATE TABLE TBL_TEST(
--  MEM_TEST VARCHAR(10)
--);

--DROP SEQUENCE SEQ_MEMBER;
--DROP SEQUENCE SEQ_PRODUCT;
--DROP SEQUENCE SEQ_EVENT;
--DROP SEQUENCE SEQ_PAYMENT;
--DROP SEQUENCE SEQ_EXCHANGE_LIST;
--DROP SEQUENCE SEQ_REFUND_LIST;
--DROP SEQUENCE SEQ_NOTICE;
--DROP SEQUENCE SEQ_QNA;
--DROP SEQUENCE SEQ_CATEGORY;
--DROP SEQUENCE SEQ_VIEW;

--TBL_MEMBER
CREATE TABLE TBL_MEMBER (
  MEM_CODE VARCHAR(500) PRIMARY KEY,
  MEM_ADMIN VARCHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
  MEM_NAME VARCHAR(20) NOT NULL,
  MEM_BIRTH VARCHAR(20) NOT NULL,
  MEM_GENDER VARCHAR(1) CHECK (GENDER IN('M', 'F')),
  MEM_ID VARCHAR(20) NOT NULL,
  MEM_PWD VARCHAR(20) NOT NULL,
  MEM_PHONE VARCHAR(20) NOT NULL,
  MEM_ADRR VARCHAR(100) NOT NULL,
  MEM_ACC_DATE DATE DEFAULT SYSDATE,
  MEM_OUT VARCHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
  MEM_EMAIL VARCHAR(20) NOT NULL
);

--TBL_PRODUCT
CREATE TABLE TBL_PRODUCT (
  PRO_CODE VARCHAR(500) PRIMARY KEY,
  PRO_NAME VARCHAR(50) NOT NULL,
  PRO_PRICE INT NOT NULL,
  CATE_NAME VARCHAR(20) NOT NULL,
  PRO_SIZE VARCHAR(5) NOT NULL,
  PRO_STOCK INT,
  PRO_ENT_DATE DATE DEFAULT SYSDATE,
  CONSTRAINT FK_CATE_NAME FOREIGN KEY (CATE_NAME) REFERENCES TBL_CATEGORY(CATE_NAME)
);

--TBL_EVENT
CREATE TABLE TBL_EVENT (
  EVENT_CODE VARCHAR(100) PRIMARY KEY,
  EVENT_NAME VARCHAR(50) NOT NULL,
  EVENT_DETAIL VARCHAR(500),
  EVENT_ADD_DATE DATE DEFAULT SYSDATE
);

--TBL_PAYMENT
CREATE TABLE TBL_PAYMENT (
  MEM_CODE VARCHAR(500) NOT NULL,
  PRO_CODE VARCHAR(500) NOT NULL,
  PAY_FINISH VARCHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
  ORDER_NUM VARCHAR(50) PRIMARY KEY,
  DELIVERY_STS VARCHAR(20) NOT NULL,
  MEM_ADRR VARCHAR(100) NOT NULL,
  ORDER_DATE DATE DEFAULT SYSDATE,
  PAY_DATE DATE DEFAULT NULL,
  EXCHANGE_YN VARCHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
  REFUND_YN VARCHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
  CONSTRAINT FK_MEM_CODE FOREIGN KEY (MEM_CODE) REFERENCES TBL_MEMBER(MEM_CODE),
  CONSTRAINT FK_PRO_CODE FOREIGN KEY (PRO_CODE) REFERENCES TBL_PRODUCT(PRO_CODE),
  CONSTRAINT FK_MEM_ADRR FOREIGN KEY (MEM_ADRR) REFERENCES TBL_MEMBER(MEM_ADRR)
);

----EXCHANGE_LIST
--CREATE TABLE EXCHANGE_LIST (
--  EXCHANGE_CODE VARCHAR(100) PRIMARY KEY,
--  EXCHANGE_STS VARCHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
--  ORDER_NUM VARCHAR(100)
--);
--
----REFUND_LIST
--CREATE TABLE REFUND_LIST (
--  REFUND_CODE VARCHAR(100) PRIMARY KEY,
--  REFUND_STS VARCHAR(1) DEFAULT 'N' CHECK(STATUS IN('Y', 'N')),
--  ORDER_NUM VARCHAR(100)
--);

--TBL_NOTICE
CREATE TABLE TBL_NOTICE (
  NTC_CODE VARCHAR(100) PRIMARY KEY,
  NTC_TITLE VARCHAR(50) NOT NULL,
  NTC_DETAIL VARCHAR(500)
);

--TBL_QNA
CREATE TABLE TBL_QNA (
  QNA_CODE VARCHAR(100) PRIMARY KEY,
  QNA_TITLE VARCHAR(50) NOT NULL,
  QNA_DETAIL VARCHAR(500)
);

--TBL_CATEGORY
CREATE TABLE TBL_CATEGORY (
  CATE_CODE VARCHAR(50) PRIMARY KEY,
  CATE_NAME VARCHAR(50) NOT NULL,
  CONSTRAINT FK_CATE_NAME FOREIGN KEY (CATE_NAME) REFERENCES TBL_CATEGORY(CATE_NAME)
);

--TBL_VIEW
CREATE TABLE TBL_VIEW (
  MEM_CODE VARCHAR(500) PRIMARY KEY,
  PRO_CODE VARCHAR(500) NOT NULL,
  CONSTRAINT FK_PRO_CODE FOREIGN KEY (PRO_CODE) REFERENCES TBL_PRODUCT(PRO_CODE)
);